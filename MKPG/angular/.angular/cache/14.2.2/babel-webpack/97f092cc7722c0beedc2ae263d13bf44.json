{"ast":null,"code":"import { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/customer.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction LoginComponent_strong_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"strong\", 10);\n    i0.ɵɵtext(1, \" This field is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_ng_template_10_strong_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"strong\", 10);\n    i0.ɵɵtext(1, \" This email is not valid \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, LoginComponent_ng_template_10_strong_0_Template, 2, 0, \"strong\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r2.form.get(\"email\")) == null ? null : tmp_0_0.touched) && ((tmp_0_0 = ctx_r2.form.get(\"email\")) == null ? null : tmp_0_0.hasError(\"email\")));\n  }\n}\n\nfunction LoginComponent_strong_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"strong\", 10);\n    i0.ɵɵtext(1, \" This field is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_strong_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"strong\", 10);\n    i0.ɵɵtext(1, \" the email and password combination is incorrect \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(customerService, router) {\n      this.customerService = customerService;\n      this.router = router;\n      this.showErr = false;\n      this.form = new FormGroup({\n        email: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', [Validators.required])\n      });\n\n      if (localStorage.getItem('MKPG')) {\n        this.router.navigate(['/home']);\n      }\n    }\n\n    ngOnInit() {}\n\n    logIn() {\n      if (this.form.valid) {\n        this.customerService.getCustomerByEmail(`${this.form.get('email')?.value}`).subscribe({\n          next: data => {\n            this.showErr = false;\n\n            if (data.password === this.form.get('password')?.value) {\n              this.customerService.login(`${data.customerId}`);\n              this.router.navigate(['/home']);\n            } else {\n              this.showErr = true;\n            }\n          },\n          error: err => {\n            this.showErr = true;\n          }\n        });\n      } else {\n        this.form.markAllAsTouched();\n      }\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 20,\n    vars: 5,\n    consts: [[1, \"container\"], [1, \"form-container\"], [1, \"u-align-center\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\", 1, \"input\"], [\"class\", \"error\", 4, \"ngIf\", \"ngIfElse\"], [\"emailError\", \"\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 1, \"input\"], [\"class\", \"error\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\"], [1, \"error\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"LogIn\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.logIn();\n        });\n        i0.ɵɵelementStart(5, \"div\")(6, \"label\");\n        i0.ɵɵtext(7, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵtemplate(9, LoginComponent_strong_9_Template, 2, 0, \"strong\", 5);\n        i0.ɵɵtemplate(10, LoginComponent_ng_template_10_Template, 1, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\")(13, \"label\");\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 7);\n        i0.ɵɵtemplate(16, LoginComponent_strong_16_Template, 2, 0, \"strong\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, LoginComponent_strong_17_Template, 2, 0, \"strong\", 8);\n        i0.ɵɵelementStart(18, \"button\", 9);\n        i0.ɵɵtext(19, \"LogIn\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(11);\n\n        let tmp_1_0;\n        let tmp_3_0;\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.form.get(\"email\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx.form.get(\"email\")) == null ? null : tmp_1_0.hasError(\"required\")))(\"ngIfElse\", _r1);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.form.get(\"password\")) == null ? null : tmp_3_0.touched) && ((tmp_3_0 = ctx.form.get(\"password\")) == null ? null : tmp_3_0.hasError(\"required\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showErr);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}