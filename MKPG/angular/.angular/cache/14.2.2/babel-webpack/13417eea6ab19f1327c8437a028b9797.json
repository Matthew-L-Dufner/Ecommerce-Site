{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let OrderService = /*#__PURE__*/(() => {\n  class OrderService {\n    constructor(http) {\n      this.http = http;\n      this._url = \"http://localhost:8080/api/orders\";\n      this.orders = [];\n      this.myOrders = new BehaviorSubject([]);\n      this.myOrders$ = this.myOrders.asObservable();\n    }\n\n    getAllOrders() {\n      return this.http.get(`${this._url}`);\n    }\n\n    deleteOrder(id) {\n      return this.http.delete(`${this._url}/${id}`);\n    }\n\n    createOrder(order) {\n      return this.http.post(`${this._url}`, order);\n    }\n\n    addMyOrder(order) {\n      this.orders.push(order);\n      this.myOrders.next(this.orders);\n    }\n\n    updateMyOrder(data) {\n      const orderIndex = this.orders.findIndex(order => order.orderId === data.orderId);\n      this.orders.splice(orderIndex, 1);\n      this.orders.push(data);\n      this.myOrders.next(this.orders);\n    }\n\n    deleteMyOrder(id) {\n      const orderIndex = this.orders.findIndex(order => order.orderId === id);\n      this.orders.splice(orderIndex, 1);\n      this.myOrders.next(this.orders);\n    }\n\n    setOrders(orders) {\n      this.orders = orders;\n      this.myOrders.next(this.orders);\n    }\n\n    getOrders() {\n      return this.orders;\n    }\n\n    updateOrder(order) {\n      return this.http.put(`${this._url}`, order);\n    }\n\n  }\n\n  OrderService.ɵfac = function OrderService_Factory(t) {\n    return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  OrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderService,\n    factory: OrderService.ɵfac,\n    providedIn: 'root'\n  });\n  return OrderService;\n})();","map":null,"metadata":{},"sourceType":"module"}